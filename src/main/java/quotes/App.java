/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;


public class App {
    public static void main(String[] args) {
        String json = getJSON();
        GenericQuote[] quoteArray = quotesFromJSON(json);
        GenericQuote quoteOfTheDay = randomQuote(Math.random(), quoteArray);
        System.out.println(quoteOfTheDay);
    }

    public static String getJSON() {
        String json;
        try {
            json = tryAPI();
            return json;
        } catch (IOException I) {
            try {
                System.out.println("Problem with the API, trying local..");
                json = tryLocal();
                return json;
            } catch (IOException I2) {
                System.out.println("Problem with local, terminating..");
            }
        }
        return null;
    }

    public static String tryAPI() throws IOException {
        String APIURL = "https://favqs.com/api/quotes";
        URL url;
        url = new URL(APIURL);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        try {
            connection.setRequestMethod("GET");
            connection.setRequestProperty("Authorization", "Token token=\"9505b9ce5e6383e4cbe68c07a0ff804f\"");
            int status = connection.getResponseCode();
            if (status == 200) {
                try (BufferedReader reader = fileReader(connection)) {
                    return jsonBuilder(reader);
                }
            } else {
                throw new IOException();
            }
        } finally {
            connection.disconnect();
        }
    }

    public static String tryLocal() throws IOException {
        try (BufferedReader reader = fileReader("src/main/resources/recentquotes.json")) {
            return jsonBuilder(reader);
        }
    }

    public static BufferedReader fileReader(String path) throws FileNotFoundException {
        BufferedReader fileReader = new BufferedReader(new FileReader(path));
        return fileReader;
    }

    public static BufferedReader fileReader(HttpURLConnection connection) throws IOException {
        InputStream inputStream = connection.getInputStream();
        InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
        BufferedReader fileReader = new BufferedReader(inputStreamReader);
        return fileReader;
    }

    public static String jsonBuilder(BufferedReader reader) throws IOException {
        StringBuilder json = new StringBuilder();
        String line = reader.readLine();
        while (line != null) {
            json.append(line);
            line = reader.readLine();
        }
        return json.toString();
    }

    public static GenericQuote[] quotesFromJSON(String JSON) {
        Gson gson = new Gson();
        GenericQuote[] output = gson.fromJson(JSON, GenericQuote[].class);
        return output;
    }

    public static GenericQuote randomQuote(double random, GenericQuote[] quotes) {
        int randomIndex = (int) (random * quotes.length);
        GenericQuote output = quotes[randomIndex];
        return output;
    }
}
